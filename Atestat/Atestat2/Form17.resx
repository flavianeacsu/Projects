<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button6.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UhykPGrsAAAAAElFTkSuQmCC
</value>
  </data>
</root>